<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A7u7uAN3d3QDMzMwAu7u7AKqqqgCZmZkAiIiIAHd3dwBmZmYAVVVVAERERAAzMzMAIiIiABER
        EQAAAAAA2dn/AL+//wCmpv8AjIz/AHNz/wBZWf8AQED/ACYm/wAAAP8AAADmAAAAzAAAALIAAACZAAAA
        gAAAAGYAAABMANno/wC/2f8Apsr/AIy6/wBzq/8AWZv/AECM/wAmff8AAGb/AABc5gAAUswAAEeyAAA9
        mQAAM4AAAClmAAAeTADZ9/8Av/L/AKbt/wCM6P8Ac+P/AFne/wBA2f8AJtT/AADM/wAAuOYAAKPMAACO
        sgAAepkAAGaAAABSZgAAPUwA2f/3AL//8gCm/+0AjP/oAHP/4wBZ/94AQP/ZACb/1AAA/8wAAOa4AADM
        owAAso4AAJl6AACAZgAAZlIAAEw9ANn/6AC//9kApv/KAIz/ugBz/6sAWf+bAED/jAAm/30AAP9mAADm
        XAAAzFIAALJHAACZPQAAgDMAAGYpAABMHgDZ/9kAv/+/AKb/pgCM/4wAc/9zAFn/WQBA/0AAJv8mAAD/
        AAAA5gAAAMwAAACyAAAAmQAAAIAAAABmAAAATAAA6P/ZANn/vwDK/6YAuv+MAKv/cwCb/1kAjP9AAH3/
        JgBm/wAAXOYAAFLMAABHsgAAPZkAADOAAAApZgAAHkwAAPf/2QDy/78A7f+mAOj/jADj/3MA3v9ZANn/
        QADU/yYAzP8AALjmAACjzAAAjrIAAHqZAABmgAAAUmYAAD1MAAD/99kA//K/AP/tpgD/6IwA/+NzAP/e
        WQD/2UAA/9QmAP/MAADmuAAAzKMAALKOAACZegAAgGYAAGZSAABMPQAA/+jZAP/ZvwD/yqYA/7qMAP+r
        cwD/m1kA/4xAAP99JgD/ZgAA5lwAAMxSAACyRwAAmT0AAIAzAABmKQAATB4AAP/Z2QD/v78A/6amAP+M
        jAD/c3MA/1lZAP9AQAD/JiYA/wAAAOYAAADMAAAAsgAAAJkAAACAAAAAZgAAAEwAAAD/2egA/7/ZAP+m
        ygD/jLoA/3OrAP9ZmwD/QIwA/yZ9AP8AZgDmAFwAzABSALIARwCZAD0AgAAzAGYAKQBMAB4A/9n3AP+/
        8gD/pu0A/4zoAP9z4wD/Wd4A/0DZAP8m1AD/AMwA5gC4AMwAowCyAI4AmQB6AIAAZgBmAFIATAA9APfZ
        /wDyv/8A7ab/AOiM/wDjc/8A3ln/ANlA/wDUJv8AzAD/ALgA5gCjAMwAjgCyAHoAmQBmAIAAUgBmAD0A
        TADo2f8A2b//AMqm/wC6jP8Aq3P/AJtZ/wCMQP8AfSb/AGYA/wBcAOYAUgDMAEcAsgA9AJkAMwCAACkA
        ZgAeAEwADw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8XFw8PDw8PDxcXDxcX
        FxcXFxcXDw8PDxcPDw8PDw8PDxcXDw8PDw8PFxcPDw8PDw8PDxcXDw8PFw8PDw8PDw8PFxcPDw8PDxcX
        Dw8PDw8PDw8PDxcPDw8XDw8PDw8PDw8XFw8PDw8PFxcPDw8PDw8PDw8PFw8PDxcPDw8PDw8PDxcXDw8P
        DxcXDw8PDw8PDw8PDw8XDw8PFw8PDw8PDw8PFxcPDw8XFw8PDw8PDw8PDw8PDxcPDw8XDw8PDw8PDw8X
        Fw8PDxcXDw8PDw8PDw8PDw8PFw8PDxcPDw8PDw8PDxcXDw8XFw8PDw8PDw8PDw8PDw8XDw8PFw8PDw8P
        Dw8PFxcPDxcXDw8PDw8PDw8PDw8PDxcPDw8XDw8PDw8PDw8XFw8XFw8PDw8PDw8PDw8PDw8XFw8PDxcX
        FxcXDw8PDxcXFxcXDw8PDw8PDw8PDw8XFxcXDw8PFw8PDw8XFxcPFxcXFw8PDw8PDw8PDw8XFxcPDw8P
        Dw8XDw8PDw8PFw8XFxcXDw8PDw8PDw8XFxcPDw8PDw8PDxcPDw8PDw8XDxcXDxcPDw8PDw8PFxcXDw8P
        Dw8PDw8PFw8PDw8PDxcPFxcPFxcPDw8PDw8XDw8PDw8PDw8PDw8XDw8PDw8PFw8XFw8PFw8PDw8PDxcP
        Dw8PDw8PDw8PDxcPDw8PDw8XDxcXDw8XFxcPDw8PFw8PDw8PDw8PDw8PFw8PDw8PDxcPFxcPDw8XFw8P
        Dw8XDw8PDw8PDw8PDw8XDw8PDw8PFw8XFw8PDw8XFw8PDxcPDw8PDw8PDw8PDxcPDw8PDw8XDxcXDw8P
        DxcXFw8PFw8PDw8PDw8PDw8PFw8PDw8PFxcPFxcPDw8PDxcXDw8XFxcXFxcXFw8PDw8XFxcXFxcXDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PD/////////////////////8fEA5/HxAGfx4fxn8eP8Z/HD/mfxh/5n8Y/+Z/EP/mfxH/
        5n8B/8YHA/8GAAP8BnAH8D58B+D+fAfh/nwD5/58A+f+fBDn/nwQ5/58GGf+fBwgDgAcIA4B////////
        ////////////////////////
</value>
  </data>
</root>